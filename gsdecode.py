#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.21
#  in conjunction with Tcl version 8.6
#    May 23, 2019 10:17:27 AM IST  platform: Windows NT

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import gsdecode_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    top = Toplevel1 (root)
    gsdecode_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = tk.Toplevel (root)
    top = Toplevel1 (w)
    gsdecode_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        font11 = "-family {Segoe UI} -size 23 -weight bold -underline "  \
            "1 -overstrike 1"

        top.geometry("600x450+350+136")
        top.title("New Toplevel")
        top.configure(background="#d9d9d9")

        self.Label1 = tk.Label(top)
        self.Label1.place(relx=0.25, rely=0.044, height=48, width=314)
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(font=font11)
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(text='''SOUND STG DECODE''')

        self.sourcetext = tk.Text(top)
        self.sourcetext.place(relx=0.55, rely=0.4, relheight=0.067
                , relwidth=0.283)
        self.sourcetext.configure(background="white")
        self.sourcetext.configure(font="TkTextFont")
        self.sourcetext.configure(foreground="black")
        self.sourcetext.configure(highlightbackground="#d9d9d9")
        self.sourcetext.configure(highlightcolor="black")
        self.sourcetext.configure(insertbackground="black")
        self.sourcetext.configure(selectbackground="#c4c4c4")
        self.sourcetext.configure(selectforeground="black")
        self.sourcetext.configure(width=10)
        self.sourcetext.configure(wrap='word')

        self.outputtext = tk.Text(top)
        self.outputtext.place(relx=0.55, rely=0.511, relheight=0.067
                , relwidth=0.283)
        self.outputtext.configure(background="white")
        self.outputtext.configure(font="TkTextFont")
        self.outputtext.configure(foreground="black")
        self.outputtext.configure(highlightbackground="#d9d9d9")
        self.outputtext.configure(highlightcolor="black")
        self.outputtext.configure(insertbackground="black")
        self.outputtext.configure(selectbackground="#c4c4c4")
        self.outputtext.configure(selectforeground="black")
        self.outputtext.configure(width=10)
        self.outputtext.configure(wrap='word')

        self.bytetext = tk.Text(top)
        self.bytetext.place(relx=0.55, rely=0.622, relheight=0.067
                , relwidth=0.283)
        self.bytetext.configure(background="white")
        self.bytetext.configure(font="TkTextFont")
        self.bytetext.configure(foreground="black")
        self.bytetext.configure(highlightbackground="#d9d9d9")
        self.bytetext.configure(highlightcolor="black")
        self.bytetext.configure(insertbackground="black")
        self.bytetext.configure(selectbackground="#c4c4c4")
        self.bytetext.configure(selectforeground="black")
        self.bytetext.configure(width=10)
        self.bytetext.configure(wrap='word')

        self.Label2 = tk.Label(top)
        self.Label2.place(relx=0.217, rely=0.422, height=21, width=177)
        self.Label2.configure(background="#d9d9d9")
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(text='''SOURCE SOUND FILE(.Extention)''')

        self.Label3 = tk.Label(top)
        self.Label3.place(relx=0.217, rely=0.533, height=21, width=173)
        self.Label3.configure(background="#d9d9d9")
        self.Label3.configure(disabledforeground="#a3a3a3")
        self.Label3.configure(foreground="#000000")
        self.Label3.configure(text='''NAME OUTPUT FILE(.Extention)''')

        self.Label4 = tk.Label(top)
        self.Label4.place(relx=0.317, rely=0.644, height=21, width=110)
        self.Label4.configure(background="#d9d9d9")
        self.Label4.configure(disabledforeground="#a3a3a3")
        self.Label4.configure(foreground="#000000")
        self.Label4.configure(text='''BYTES TO RETRIEVE''')

        self.Button1 = tk.Button(top)
        self.Button1.place(relx=0.467, rely=0.756, height=25, width=60)
        self.Button1.configure(activebackground="#ececec")
        self.Button1.configure(activeforeground="#000000")
        self.Button1.configure(background="#d9d9d9")
        self.Button1.configure(disabledforeground="#a3a3a3")
        self.Button1.configure(foreground="#000000")
        self.Button1.configure(highlightbackground="#d9d9d9")
        self.Button1.configure(highlightcolor="black")
        self.Button1.configure(pady="0")
        self.Button1.configure(text='''INITIATE''')

        self.Label5 = tk.Label(top)
        self.Label5.place(relx=0.35, rely=0.867, height=41, width=202)
        self.Label5.configure(background="#31d80f")
        self.Label5.configure(disabledforeground="#a3a3a3")
        self.Label5.configure(foreground="#000000")
        self.Label5.configure(text='''0%''')
        self.Label5.configure(width=202)

if __name__ == '__main__':
    vp_start_gui()





